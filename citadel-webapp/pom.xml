<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>citadel</artifactId>
    <groupId>org.citadel</groupId>
    <version>35.0.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>citadel-webapp</artifactId>
  <packaging>war</packaging>
  <name>OpenNMS Web Application</name>
  <properties>
    <moduleName>org.citadel.dashboard.Dashboard</moduleName>
    <moduleHtml>index.html</moduleHtml>
    <web.port>8080</web.port>
    <!-- this is used by runInPlace.sh to get the overwise provided 
         nms libs into the WEB-INF/lib for jetty -->
    <onmsLibScope>provided</onmsLibScope>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-js</id>
            <phase>process-resources</phase>
            <goals><goal>unpack</goal></goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.citadel.core</groupId>
                  <artifactId>org.citadel.core.web-assets</artifactId>
                  <version>${project.version}</version>
                  <classifier>dist</classifier>
                  <overWrite>true</overWrite>
                  <outputDirectory>target/citadel-webapp-${project.version}</outputDirectory>
                </artifactItem>
              </artifactItems>
              <excludes>META-INF/**</excludes>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ui</id>
            <phase>process-resources</phase>
            <goals><goal>unpack</goal></goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.citadel</groupId>
                  <artifactId>org.citadel.ui</artifactId>
                  <version>${project.version}</version>
                  <classifier>dist</classifier>
                  <overWrite>true</overWrite>
                  <outputDirectory>target/citadel-webapp-${project.version}/ui</outputDirectory>
                </artifactItem>
              </artifactItems>
              <excludes>META-INF/**</excludes>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ui-components</id>
            <phase>process-resources</phase>
            <goals><goal>unpack</goal></goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.citadel</groupId>
                  <artifactId>org.citadel.ui</artifactId>
                  <version>${project.version}</version>
                  <classifier>dist-menu</classifier>
                  <overWrite>true</overWrite>
                  <outputDirectory>target/citadel-webapp-${project.version}/ui-components</outputDirectory>
                </artifactItem>
              </artifactItems>
              <excludes>META-INF/**</excludes>
            </configuration>
          </execution>
          <execution>
            <id>copy-jaxb-dependencies</id>
            <phase>test-compile</phase>
            <goals><goal>copy</goal></goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.citadel.dependencies</groupId>
                  <artifactId>jaxb-dependencies</artifactId>
                  <type>pom</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${basedir}/target/endorsed</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>tomcat</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archiveClasses>true</archiveClasses>
          <archive>
            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
          </archive>
          <webResources>
            <resource>
              <filtering>true</filtering>
              <directory>${basedir}/src/main/web-filtered</directory>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <supportedProjectTypes>
            <supportedProjectType>bundle</supportedProjectType>
            <supportedProjectType>jar</supportedProjectType>
            <supportedProjectType>war</supportedProjectType>
          </supportedProjectTypes>
          <instructions>
            <Bundle-RequiredExecutionEnvironment>JavaSE-1.8</Bundle-RequiredExecutionEnvironment>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <Bundle-Version>${project.version}</Bundle-Version>

            <!-- Specify the servlet path for the WAR -->
            <Webapp-Context>citadel</Webapp-Context> <!-- Deprecated -->
            <Web-ContextPath>citadel</Web-ContextPath>

            <!--
              Add the webapp JAR itself and WEB-INF/classes to the bundle classpath. 
              All embedded JAR files will be appended to this list as well.
            -->
            <Bundle-ClassPath>.,WEB-INF/classes,WEB-INF/lib/citadel-webapp-${project.version}.jar</Bundle-ClassPath>
            <!-- Directory that will hold embedded dependency JAR files -->
            <Embed-Directory>WEB-INF/lib</Embed-Directory>
            <!--
              Embed everything with 'compile' or 'runtime' scope. Dependencies with 'provided' scope will be loaded out of OSGi 
              or from the shared classpath of /opt/citadel/lib.
            -->
            <Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
            <!-- Embed transitive dependencies in WEB-INF/lib -->
            <Embed-Transitive>true</Embed-Transitive>

            <Import-Package>
              <!-- 
                These are required classes that are not autodetected by bnd from:
                  - web.xml
                  - Spring
              -->
              org.eclipse.jetty.servlet,
              org.citadel.core.soa.config,
              org.springframework.beans.factory.config;version="[4.0,5)",
              org.springframework.context.config;version="[4.0,5)",
              org.springframework.context.support;version="[4.0,5)",
              org.springframework.js.resource, <!-- No version because webflow is a wrapped dep :/ -->
              org.springframework.orm.hibernate3.support;version="[4.0,5)",
              <!-- Spring Security namespace handler -->
              org.springframework.security.config;version="[3.2,4)",
              org.springframework.security.web.authentication;version="[3.2,4)",
              org.springframework.transaction.config;version="[4.0,5)",
              org.springframework.web.context;version="[4.0,5)",
              org.springframework.web.filter;version="[4.0,5)",

              <!-- Mark some packages that dependency JARs rely on as optional -->
              <!-- Optional dependencies of jdom -->
              oracle.xml*;resolution:=optional,
              org.jaxen*;resolution:=optional,
              <!-- Optional dependencies on old JAXP implementations -->
              com.sun.org.apache*;resolution:=optional,
              <!-- Optional dependency on Tomcat taglibs -->
              org.apache.taglibs*;resolution:=optional,
              <!-- These are probably optional dependencies of BSF -->
              org.mozilla.javascript;resolution:=optional,
              org.python.core;resolution:=optional,
              org.python.util;resolution:=optional,

              <!-- Exclude some deprecated packages that get detected by bnd -->
              <!-- Exclude FOP 0.20.0 package -->
              !org.apache.fop.messaging,
              <!-- Deprecated dependency on Apache Avalon LogKit -->
              !org.apache.log,
              <!-- Exclude sitemesh, not sure where the hell it is coming from -->
              !com.opensymphony.module.sitemesh.filter,
              <!-- Exclude JUnit, not sure where the hell it is coming from -->
              !junit*,
              <!-- Exclude Gilead, it is an optional GWT dependency -->
              !net.sf.gilead*,
              <!-- This is a spurious code generation dependency -->
              !org.zeroturnaround.javarebel,
              *
            </Import-Package>
            <!-- 
              TODO: Exclude all packages from export to get the webapp to load.
              This needs to be changed to allow the webapp to function. We need to resolve
              package conflicts between citadel-webapp and other projects.
            -->
            <Export-Package>
              <!--
              org.citadel.web.account.selfService,
              org.citadel.web.admin.discovery,
              org.citadel.web.admin.nodeManagement,
              org.citadel.web.admin.notification,
              org.citadel.web.admin.roles,
              org.citadel.web.admin.users,
              org.citadel.web.alarm,
              org.citadel.web.asset,
              org.citadel.web.category,
              org.citadel.web.element,
              org.citadel.web.event,
              org.citadel.web.graph,
              org.citadel.web.mail,
              org.citadel.web.nodelabel
              -->
              !*
            </Export-Package>
          </instructions>
        </configuration>
      </plugin>

      <!-- plugin to use to run webapp in an embedded tomcat -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <version>1.1</version>
        <configuration>
          <path>/${project.artifactId}</path>
          <port>${web.port}</port>
        </configuration>
      </plugin>
      <!-- plugin to use to run webapp in an embedded jetty -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <configuration>
          <contextPath>/citadel</contextPath>
          <scanIntervalSeconds>10</scanIntervalSeconds>
          <connectors>
            <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
              <port>${web.port}</port>
              <maxIdleTime>60000</maxIdleTime>
            </connector>
          </connectors>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/meta-inf.xml</descriptor>
            <descriptor>src/assembly/xsds.xml</descriptor>
          </descriptors>
          <overrideUid>0</overrideUid>
          <overrideGid>0</overrideGid>
          <tarLongFileMode>posix</tarLongFileMode>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
            <execution>
                <id>attach-artifacts</id>
                <phase>package</phase>
                <goals>
                    <goal>attach-artifact</goal>
                </goals>
                <configuration>
                    <artifacts>
                        <artifact>
                            <file>target/citadel-webapp-${project.version}/WEB-INF/lib/citadel-webapp-${project.version}.jar</file>
                            <type>jar</type>
                        </artifact>
                    </artifacts>
                </configuration>
            </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
    	<plugins>
    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>org.apache.maven.plugins</groupId>
    								<artifactId>maven-dependency-plugin</artifactId>
    								<versionRange>[2.4,)</versionRange>
    								<goals><goal>copy</goal></goals>
    							</pluginExecutionFilter>
    							<action><ignore/></action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
    	</plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>runInPlace</id>
      <activation><activeByDefault>false</activeByDefault></activation>
      <properties>
        <onmsLibScope>compile</onmsLibScope>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-api</artifactId>
          <version>${log4j2Version}</version>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
          <version>${log4j2Version}</version>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-1.2-api</artifactId>
          <version>${log4j2Version}</version>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-slf4j-impl</artifactId>
          <version>${log4j2Version}</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>jspc</id>
      <activation><activeByDefault>true</activeByDefault></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-jspc-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>jspc</id>
                <goals>
                  <goal>jspc</goal>
                </goals>
                <configuration>
                  <keepSources>true</keepSources>
                  <webXmlFragment>${basedir}/target/web.xml.jspc-insert</webXmlFragment>
                  <generatedClasses>${basedir}/target/jsp-classes</generatedClasses>
                  <useProvidedScope>true</useProvidedScope>
                  <tldJarNamePatterns>.*\.jar$</tldJarNamePatterns>
                </configuration>
              </execution>
            </executions>
            <!-- add some jars to the plugin classpath so they can be searched for .tld files -->
            <dependencies>
              <dependency>
                <groupId>org.citadel.dependencies</groupId>
                <artifactId>spring-web-dependencies</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
              </dependency>
              <dependency>
                <groupId>org.citadel.dependencies</groupId>
                <artifactId>spring-security-dependencies</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
              </dependency>
              <dependency>
                <groupId>org.citadel.extremecomponents</groupId>
                <artifactId>extremecomponents</artifactId>
                <version>2.0.2</version>
              </dependency>
              <dependency>
                <groupId>org.citadel.dependencies</groupId>
                <artifactId>jstl-dependencies</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <dependencies>
    <!-- this dependency only exists for unpacking into the final webapp, hence scope=provided -->
    <dependency>
      <groupId>org.citadel.core</groupId>
      <artifactId>org.citadel.core.web-assets</artifactId>
      <version>${project.version}</version>
      <classifier>dist</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>org.citadel.ui</artifactId>
      <version>${project.version}</version>
      <classifier>dist</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>org.citadel.ui</artifactId>
      <version>${project.version}</version>
      <classifier>dist-menu</classifier>
      <scope>provided</scope>
    </dependency>

    <!-- ...but this one contains code -->
    <dependency>
      <groupId>org.citadel.core</groupId>
      <artifactId>org.citadel.core.web-assets</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>

    <!-- indirect OpenNMS dependencies that belong in $OPENNMS_HOME/lib -->
    <!-- these should all be <scope>${onmsLibScope}</scope> and also included in citadel-base-assembly -->

    <dependency>
      <groupId>org.eclipse.jetty.websocket</groupId>
      <artifactId>websocket-servlet</artifactId>
      <version>${jettyVersion}</version>
      <scope>${onmsLibScope}</scope>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>citadel-dao</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>citadel-services</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>citadel-web-api</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>citadel-provision-persistence</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>citadel-rrd-jrobin</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.dependencies</groupId>
      <artifactId>jrrd2-dependencies</artifactId>
      <scope>${onmsLibScope}</scope>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>citadel-rrdtool-api</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>citadel-web-dependencies</artifactId>
      <type>pom</type>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.core</groupId>
      <artifactId>org.citadel.core.soa</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.core</groupId>
      <artifactId>org.citadel.core.db</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.core</groupId>
      <artifactId>org.citadel.core.sysprops</artifactId>
      <version>${project.version}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.core</groupId>
      <artifactId>org.citadel.core.config</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.core.ipc.sink</groupId>
      <artifactId>org.citadel.core.ipc.sink.common</artifactId>
      <version>${project.version}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.core.ipc.rpc</groupId>
      <artifactId>org.citadel.core.ipc.rpc.common</artifactId>
      <version>${project.version}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.dependencies</groupId>
      <artifactId>felix-dependencies</artifactId>
      <type>pom</type>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.dependencies</groupId>
      <artifactId>snmp-dependencies</artifactId>
      <type>pom</type>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features</groupId>
      <artifactId>org.citadel.features.charts</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features</groupId>
      <artifactId>org.citadel.features.instrumentationLogReader</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>   
    <dependency>
      <groupId>org.citadel.features</groupId>
      <artifactId>org.citadel.features.discovery</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features.reporting</groupId>
      <artifactId>org.citadel.features.reporting.core</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features.reporting</groupId>
      <artifactId>org.citadel.features.reporting.api</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features.reporting</groupId>
      <artifactId>org.citadel.features.reporting.availability</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features.reporting</groupId>
      <artifactId>org.citadel.features.reporting.model</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features.reporting</groupId>
      <artifactId>org.citadel.features.reporting.dao</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features.reporting</groupId>
      <artifactId>org.citadel.features.reporting.repository</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features</groupId>
      <artifactId>org.citadel.features.request-tracker</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features</groupId>
      <artifactId>org.citadel.features.springframework-security</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features</groupId>
      <artifactId>org.citadel.features.system-report</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features.bsm</groupId>
      <artifactId>org.citadel.features.bsm.service.api</artifactId>
      <version>${project.version}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features.measurements</groupId>
      <artifactId>org.citadel.features.measurements.impl</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>

    <!-- indirect 3rd-party dependencies that belong in $OPENNMS_HOME/lib -->
    <!-- these should all be <scope>${onmsLibScope}</scope> and also included in citadel-base-assembly -->

    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-math3</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.json-lib</groupId>
      <artifactId>json-lib</artifactId>
      <classifier>jdk15</classifier>
      <scope>${onmsLibScope}</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
    </dependency>
    <dependency>
      <groupId>opensymphony</groupId>
      <artifactId>ognl</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-jexl</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-dom</artifactId>
      <scope>${onmsLibScope}</scope>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-svg-dom</artifactId>
      <scope>${onmsLibScope}</scope>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-transcoder</artifactId>
      <scope>${onmsLibScope}</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-xml</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-util</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.taglibs</groupId>
      <artifactId>taglibs-standard-impl</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>org.citadel.config-dao.thresholding.api</artifactId>
      <version>${project.version}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>org.citadel.config-dao.poll-outages.api</artifactId>
      <version>${project.version}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>

    <!-- indirect 3rd-party dependencies that belong in WEB-INF/lib -->
    <!-- these should all be <scope>compile</scope> -->

    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>5.4.1</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.rometools</groupId>
      <artifactId>rome</artifactId>
      <exclusions>
        <exclusion>
          <groupId>jdom</groupId>
          <artifactId>jdom</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jdom</groupId>
          <artifactId>jdom2</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Use an OSGi-compatible jdom bundle -->
    <dependency>
      <groupId>org.apache.servicemix.bundles</groupId>
      <artifactId>org.apache.servicemix.bundles.jdom</artifactId>
      <version>1.1_4</version>
    </dependency>
    <dependency>
      <groupId>org.citadel.extremecomponents</groupId>
      <artifactId>extremecomponents</artifactId>
      <version>2.0.2</version>
      <exclusions>
        <exclusion>
          <groupId>ant</groupId>
          <artifactId>ant</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-beanutils</groupId>
          <artifactId>commons-beanutils</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-collections4</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-text</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.taglibs</groupId>
          <artifactId>taglibs-standard-impl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.taglibs</groupId>
          <artifactId>taglibs-standard-spec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.citadel.dependencies</groupId>
      <artifactId>jung-shaded</artifactId>
      <scope>${onmsLibScope}</scope>
      <exclusions>
        <exclusion>
          <groupId>concurrent</groupId>
          <artifactId>concurrent</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>${freemarkerVersion}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features.topology</groupId>
      <artifactId>org.citadel.features.topology.link</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.owasp.encoder</groupId>
      <artifactId>encoder-jsp</artifactId>
      <version>${owaspEncoderVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.owasp.encoder</groupId>
      <artifactId>encoder</artifactId>
      <version>${owaspEncoderVersion}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>citadel-taglib</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- test dependencies -->
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>citadel-dao-mock</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>citadel-provision-persistence</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>citadel-icmp-jna</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel</groupId>
      <artifactId>citadel-icmp-best</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.core.test-api</groupId>
      <artifactId>org.citadel.core.test-api.db</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.core.test-api</groupId>
      <artifactId>org.citadel.core.test-api.http</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.core.test-api</groupId>
      <artifactId>org.citadel.core.test-api.rest</artifactId>
    </dependency>
    <dependency>
      <groupId>org.citadel.core.test-api</groupId>
      <artifactId>org.citadel.core.test-api.snmp</artifactId>
    </dependency>
    <dependency>
      <groupId>org.citadel.core.test-api</groupId>
      <artifactId>org.citadel.core.test-api.xml</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.core.test-api</groupId>
      <artifactId>org.citadel.core.test-api.services</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.tests</groupId>
      <artifactId>org.citadel.tests.mock-elements</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features.events</groupId>
      <artifactId>org.citadel.features.events.daemon</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features.collection</groupId>
      <artifactId>org.citadel.features.collection.persistence.rrd</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.citadel.features.distributed</groupId>
      <artifactId>org.citadel.features.distributed.kv-store.json.postgres</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-core</artifactId>
      <version>2.0.0.AM27</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-server-jndi</artifactId>
      <version>2.0.0.AM26</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
